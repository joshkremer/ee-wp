@mixin clearfix() {
	& {
		*zoom: 1;
	}
	&:before,
	&:after {
		content: "";
		display: table;
	}
	&:after {
		clear: both;
	}
}





@mixin image-replace($imageURL) {
	background: url($imageURL) no-repeat;
	text-indent: 100%;
	white-space: nowrap;
	overflow: hidden;
}

@mixin headlines {
	h1,h2,h3,h4,h5,h6 {
		@content;
	}
}

@mixin size($w, $h) {
	width: $w;
	height: $h;
}

@mixin no-vmargin() {
	*:first-child {
		margin-top: 0;
	}
	*:last-child {
		margin-bottom: 0;
	}
}

// For media querys:
// Make a breakpoint between $min and $max
@function in-between($min, $max) {
	@return ($max - $min)/2 + $min;
}

@mixin fixed_mq() {
	width: 320px;
	@include media($md) {
		width: 768px;
	}
	@include media($lg) {
		width: 1024px;
	}
	@include media($xl) {
		width: 1366px;
	}
}

@mixin font-size($fs-map, $fs-breakpoints: $breakpoints) {
  @each $fs-breakpoint, $fs-font-size in $fs-map {
    @if $fs-breakpoint == null {
      @include make-font-size($fs-font-size);
    }
    @else {
      // If $fs-font-size is a key that exists in
      // $fs-breakpoints, use the value
      @if map-has-key($fs-breakpoints, $fs-breakpoint) {
        $fs-breakpoint: map-get($fs-breakpoints, $fs-breakpoint);
      }
      @media screen and (min-width: $fs-breakpoint) {
        @include make-font-size($fs-font-size);
      }
    }
  }
}

// Utility function for mixin font-size
@mixin make-font-size($fs-font-size) {
  // If $fs-font-size is a list, include
  // both font-size and line-height
  @if type-of($fs-font-size) == "list" {
    font-size: nth($fs-font-size, 1);
    @if (length($fs-font-size) > 1) {
      line-height: nth($fs-font-size, 2);
    }
  }
  @else {
    font-size: $fs-font-size;
  }
}




// Breakpoints mixin
@mixin mq($mq-breakpoint, $mq-breakpoints: $breakpoints) {
  // If $mq-breakpoint is a key that exists in
  // $mq-breakpoints, get and use the value
  @if map-has-key($mq-breakpoints, $mq-breakpoint) {
    $mq-breakpoint: map-get($mq-breakpoints, $mq-breakpoint);
  }
  
  @media screen and (min-width: #{$mq-breakpoint}) {
    @content;
  }
}



/***************************
PLACEHOLDERS
***************************/


// clearfix

%clearfix {
*zoom : 1;
&:before,
&:after {
display: table;
content : ""; }
&:after {
clear : both; } }


// hidden

%hidden {
display : none !important;
visibility : hidden; }
.hide {
	@extend %hidden;
}

%hide-text {
display: block;
text-indent : 110%;
white-space : nowrap;
overflow : hidden; }

%invisible {
visibility : hidden; }

%visuallyhidden {
overflow : hidden;
position : absolute;
clip : rect(0 0 0 0);
height : 1px;
width : 1px;
margin : -1px;
padding : 0;
border : 0;

	&.focusable {

		&:active,
		&:focus {
		position : static;
		clip : auto;
		height : auto;
		width : auto;
		margin : 0;
		overflow: visible; } 
	} 
}


// @include overflow

%text-overflow {
overflow : hidden;
text-overflow : ellipsis;
white-space : nowrap; }


// @include zero

%zero {
margin : 0;
padding : 0; }